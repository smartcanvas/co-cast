import org.apache.tools.ant.filters.ReplaceTokens

evaluationDependsOn(':cocast-backend')
evaluationDependsOn(':cocast-web')

/**
 * Generate the property files with a specific configuration
 */
task config(type: Copy) {

    //this task might be called with -Penv=<environemnt>
    //and it will look for a <environment>.property on the root dir
    def envFile = "local.properties"
    if (project.hasProperty('env')) {
        envFile = "$env" + ".properties"
    }

    def configFile = "$projectDir/config.properties"
    def targetDir = "$projectDir/cocast-backend/src/main/resources"

    println "Config file = $configFile"
    println "Target dir = $targetDir"
    println "Env file = $envFile"

    from configFile
    into(targetDir)

    def envProps = new Properties()
    file(envFile).withInputStream {
        envProps.load(it);
    }

    filter(ReplaceTokens, tokens: envProps)
}

/**
 * Deploys the container
 */
task deployBackend(dependsOn: [config, ":cocast-backend:war", ":cocast-backend:backendDocker"]) << {
}